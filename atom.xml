<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>什么都不知道</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chinalichen.me/"/>
  <updated>2018-01-18T13:33:55.855Z</updated>
  <id>http://chinalichen.me/</id>
  
  <author>
    <name>李晨</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我是如何帮人选购电脑的</title>
    <link href="http://chinalichen.me/2018/01/18/How_I_choose_a_computer/"/>
    <id>http://chinalichen.me/2018/01/18/How_I_choose_a_computer/</id>
    <published>2018-01-18T13:33:55.855Z</published>
    <updated>2018-01-18T13:33:55.855Z</updated>
    
    <content type="html"><![CDATA[<p>昨天高中舍友小Q找我介绍一款笔记本电脑。之前他已经让我介绍过三四款，是给他的弟弟妹妹们上大学买的。由于之前的经历，现在小Q已经可以很精确地描述他的需求了，微信里面他是这样说的：</p><blockquote><p>这是同事用来办公的，平时就是上上网，处理一些Word和Excel文件，偶尔看看电影，不打游戏。听人给他推荐京东上的“XX牌笔记本电脑”。</p></blockquote><p>一般当一个人向你询问某款笔记本的时候，其实这个人的心里已经有选择了。问你的意见，只是想得到更多的肯定。所以，虽然他的描述中没有包含预算的信息，我们可以通过他同事说的这个XX牌笔记本电脑大致推测一下。</p><p>京东先搜索一下这个笔记本电脑吧</p><ul><li>预算</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天高中舍友小Q找我介绍一款笔记本电脑。之前他已经让我介绍过三四款，是给他的弟弟妹妹们上大学买的。由于之前的经历，现在小Q已经可以很精确地描述他的需求了，微信里面他是这样说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是同事用来办公的，平时就是上上网，处理一些Word和E
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从零构建一个实时协作编辑的应用</title>
    <link href="http://chinalichen.me/2018/01/18/Build_a_real_time_co_editing_app/"/>
    <id>http://chinalichen.me/2018/01/18/Build_a_real_time_co_editing_app/</id>
    <published>2018-01-18T13:33:55.855Z</published>
    <updated>2018-01-18T13:33:55.855Z</updated>
    
    <content type="html"><![CDATA[<ol><li>在 Github 上创建 repo，并<code>git clone</code>到本地。</li><li><p>执行<code>npm init</code>，一路默认值就好。会生成package.json，内容一般如下</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"real-time-co-editing"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"real time co-editing demo, based on Koa, WebSocket, React and Redux."</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"test"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"repository"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"git+https://github.com/chinalichen/real-time-co-editing.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"bugs"</span>: &#123;</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://github.com/chinalichen/real-time-co-editing/issues"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"homepage"</span>: <span class="string">"https://github.com/chinalichen/real-time-co-editing#readme"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 其中<code>&quot;script&quot;</code>属性是我们定义npm快捷命令的地方，可以看到当前只有一个<code>npm test</code>命令。</p></li><li><p>创建server/和client/目录。</p></li><li>创建client/dist/index.html，这是我们网页入口。创建client/src/index.js，这是前端代码的入口。</li><li>安装webpack，npm install –save-dev webpack。分别为前后端代码添加webpack的配置文件。webpack.client.config.js和webpack.server.config.js。<br>此时的工程结构是这样的<br><img src="/images/Build_a_real_time_co_editing_app_project_structure.png" alt="工程结构"></li><li><p>编辑webpack.client.config.js文件。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">'path'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> clientConfig = &#123;</span><br><span class="line">  entry: <span class="string">'client/src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'client/dist'</span>),</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加打包前端代码的快捷命令。把package.json中的<code>&quot;scripts&quot;</code>修改为</p> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "test": "test",</span><br><span class="line">  "build": "webpack --config webpack.client.config.js"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p> 之后需要打包前端代码的时候执行<code>npm run build</code>就好了。</p></li><li><p>执行<code>npm run build</code>，测试一下前端代码的打包，发现提示错误信息，大概意思就是因为我们node版本比较低，不认识<code>import</code>这个ES6中引入的关键字。这就需要借助babel-cli来把高版本的代码（文件）转变为node能识别的版本。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">D:\GitHub\real-time-co-editing\webpack.client.config.js:1</span><br><span class="line">(function (exports, require, module, __filename, __dirname) &#123; import path from &apos;path&apos;;</span><br><span class="line">                                                              ^^^^^^</span><br><span class="line">SyntaxError: Unexpected token import</span><br><span class="line">    at createScript (vm.js:56:10)</span><br><span class="line">    at Object.runInThisContext (vm.js:97:10)</span><br><span class="line">    at Module._compile (module.js:542:28)</span><br><span class="line">    at Object.Module._extensions..js (module.js:579:10)</span><br><span class="line">    at Module.load (module.js:487:32)</span><br><span class="line">    at tryModuleLoad (module.js:446:12)</span><br><span class="line">    at Function.Module._load (module.js:438:3)</span><br><span class="line">    at Module.require (module.js:497:17)</span><br><span class="line">    at require (internal/module.js:20:19)</span><br><span class="line">    at requireConfig (D:\Projects\GitHub\real-time-co-editing\node_modules\webpack\bin\convert-argv.js:97:18)</span><br></pre></td></tr></table></figure></li><li><p>安装babel-cli。执行<code>npm install babel-cli babel-core babel-preset-env --save</code>。</p></li><li>修改<code>scripts.build</code>为<code>babel-node --presets env -- node_modules/webpack/bin/webpack --config webpack.client.config.js</code>。再次执行<code>npm run build</code>，看到webpack可以正确输出了。<br><img src="/images/Build_a_real_time_co_editing_app_webpack_output.png" alt="webpack生成了一个bundle.js文件"></li><li></li><li><p>下载babel-loader。执行<code>npm install babel-loader babel-core babel-preset-env --save</code>。</p></li><li>配置babel-loader。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;在 Github 上创建 repo，并&lt;code&gt;git clone&lt;/code&gt;到本地。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行&lt;code&gt;npm init&lt;/code&gt;，一路默认值就好。会生成package.json，内容一般如下&lt;/p&gt;
 &lt;figure class
      
    
    </summary>
    
    
  </entry>
  
</feed>
